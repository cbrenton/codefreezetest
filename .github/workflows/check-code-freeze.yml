name: Check Code Freeze

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-freeze:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'  # Or whatever version you're using
          bundler-cache: true

      - name: Install dependencies
        run: gem install tzinfo

      - name: Get PR number
        id: pr
        uses: actions/github-script@v6
        with:
          debug: true
          script: |
            console.log('Event name:', context.eventName);
            console.log('Event payload:', JSON.stringify(context.payload, null, 2));

            let prNumber;
            if (context.eventName === 'pull_request') {
              prNumber = context.payload.pull_request.number;
            } else {
              prNumber = context.payload.issue.number;
            }
            core.exportVariable('PR_NUMBER', prNumber);

      - name: Check freeze status
        id: check-freeze
        run: |
          # Fetch the main branch
          git fetch origin main

          # Check if code_freeze.yaml exists in main and read its content
          if git show origin/main:code_freeze.yaml > /dev/null 2>&1; then
            # Run the script and capture output
            if ./script/is_code_freeze_inactive.rb; then
              echo "is_frozen=false" >> $GITHUB_OUTPUT
            else
              echo "is_frozen=true" >> $GITHUB_OUTPUT
              
              # Parse code_freeze.yaml to retrieve the end_time and reason variables
              REASON=$(cat code_freeze.yaml | grep "reason:" | awk '{print $2}')
              END_TIME=$(cat code_freeze.yaml | grep "end_time:" | awk '{print $2}')
              
              if [ ! -z "$REASON" ]; then
                echo "freeze_reason=$REASON" >> $GITHUB_OUTPUT
              fi
              
              if [ ! -z "$END_TIME" ]; then
                echo "freeze_end_time=$END_TIME" >> $GITHUB_OUTPUT
              fi
            fi
          else
            echo "is_frozen=false" >> $GITHUB_OUTPUT
          fi

      - name: Add freeze override comment
        if: steps.check-freeze.outputs.is_frozen == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: process.env.PR_NUMBER,
            });

            // Check if we already added a freeze comment
            const hasExistingComment = comments.some(comment =>
              comment.body.includes('⚠️ **Code Freeze Active** ⚠️')
            );

            if (!hasExistingComment) {
              const freezeReason = '${{ steps.check-freeze.outputs.freeze_reason }}';
              const freezeEndTime = '${{ steps.check-freeze.outputs.freeze_end_time }}';
              
              await github.rest.issues.createComment({
                issue_number: process.env.PR_NUMBER,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: [
                  '⚠️ **Code Freeze Active** ⚠️',
                  '',
                  'This PR was opened during the code freeze for ${{ steps.check-freeze.outputs.freeze_reason }}, active until ${{ steps.check-freeze.outputs.freeze_end_time }} Pacific Time. To proceed:',
                  '',
                  '- [ ] I acknowledge there is an active code freeze',
                  '- [ ] **EITHER** I have approval to override the code freeze **OR** the code freeze has ended',
                  '',
                  'Once completed, request approval from the appropriate team member.'
                ].join('\n')
              });
            }
