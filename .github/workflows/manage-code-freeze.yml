name: Manage Code Freeze

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - start-freeze
          - end-freeze
      reason:
        description: 'Reason for code freeze'
        required: false
        type: string
      end_date:
        description: 'Expected end date (YYYY-MM-DD)'
        required: false
        type: string

jobs:
  manage-freeze:
    runs-on: ubuntu-latest
    environment: code-freeze
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Create branch name
        id: branch
        run: |
          BRANCH="code-freeze/$(date +%Y%m%d-%H%M%S)"
          echo "name=$BRANCH" >> $GITHUB_OUTPUT

      - name: Create working branch
        run: git checkout -b ${{ steps.branch.outputs.name }}

      - name: Start Code Freeze
        if: github.event.inputs.action == 'start-freeze'
        run: |
          echo "Creating code freeze state file..."
          cat > code_freeze.yaml << EOF
          active: true
          reason: "${{ github.event.inputs.reason }}"
          end_date: "${{ github.event.inputs.end_date }}"
          EOF
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add code_freeze.yaml
          git commit -m "🥶 Start code freeze: ${{ github.event.inputs.reason }}"

      - name: End Code Freeze
        if: github.event.inputs.action == 'end-freeze'
        run: |
          echo "Updating code freeze state file..."
          cat > code_freeze.yaml << EOF
          active: false
          reason: nil
          end_date: nil
          EOF
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add code_freeze.yaml
          git commit -m "🌡️ End code freeze"

      - name: Push changes
        run: git push --set-upstream origin ${{ steps.branch.outputs.name }}

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const title = context.payload.inputs.action === 'start-freeze' 
              ? `🥶 Start code freeze: ${context.payload.inputs.reason}`
              : '🌡️ End code freeze';
            
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              head: '${{ steps.branch.outputs.name }}',
              base: 'main',
              body: context.payload.inputs.action === 'start-freeze'
                ? `Starting code freeze:\n- Reason: ${context.payload.inputs.reason}\n- End Date: ${context.payload.inputs.end_date}`
                : 'Ending code freeze'
            });
            
            console.log(`Created PR #${pr.number}: ${pr.html_url}`);
